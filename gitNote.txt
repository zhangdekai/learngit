1.创建版本库

现在总结一下今天学的两点内容：

初始化一个Git仓库，使用git init命令（mkdir learngit  cd learngit  git init）。

添加文件到Git仓库，分两步：

第一步，使用命令git add <file>，注意，可反复多次使用，添加多个文件$ git add readme.txt；

第二步，使用命令git commit，完成。$ git commit -m "wrote a readme file"提交到master


2.时光穿梭

查看git 状态：git status

查看具体修改了什么：$ git diff readme.txt 。

3.版本回退

查看提交记录：git log 带参数：git log --pretty=oneline (可取前6位当作commit id)

回退上一版本: $ git reset --hard HEAD^ 

回退到某个版本：$ git reset --hard 3628164

打印某文件：cat xxx.txt

找到昨天的commit id (查看历史纪录):$ git reflog

HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id。

穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。

要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。

4.管理修改

Git是如何跟踪修改的，每次修改，如果不add到暂存区，那就不会加入到commit中。

5.撤销修改

场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。

场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD file，就回到了场景1，第二步按场景1操作。

场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。





